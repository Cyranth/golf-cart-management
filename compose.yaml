services:
  db:
    image: postgres:${POSTGRES_IMAGE:-16.2-bullseye}
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  backend:
    restart: on-failure
    build:
      context: ./backend
      dockerfile: .docker/Dockerfile
      args:
        - BASE_IMAGE_TAG=${BASE_IMAGE_TAG:-22-bullseye-slim}
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: .docker/Dockerfile
      args:
        - BASE_IMAGE_TAG=${BASE_IMAGE_TAG:-22-bullseye-slim}
    ports:
      - "8000:8000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
